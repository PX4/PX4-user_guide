name: Check PR links

on:
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  check-links:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PR
      uses: actions/checkout@v3

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Create logs directory
      run: |
        mkdir logs

    - name: Get changed english files
      id: get_changed_markdown_english
      uses: tj-actions/changed-files@v35
      with:
        json: true
        #write_output_files: true
        #output_dir: "./logs"
        files: |
          en/**/*.md
          
    #- name: Verify the contents of the .github/outputs/added_files.json file
    #  run: |
    #    cat .github/outputs/added_files.json

    #- name: Try copy.github/outputs/added_files.json file
    #  run: |
    #    mkdir logs
    #    cat .github/outputs/added_files.json
    #    cp .github/outputs/added_files.json ./logs/added_files.log
               
    - name: Echo changed files to file from json output
      run: |
        echo "${{ steps.get_changed_markdown_english.outputs.all_changed_files }}"
        #echo "${{ steps.get_changed_markdown_english_two.outputs.all_changed_files }}"
        #echo "${{ steps.get_changed_markdown_english_three.outputs.all_changed_files }}" 
        echo "${{ steps.get_changed_markdown_english.outputs.all_changed_files }}" > ./logs/log.md
        #echo "${{ steps.get_changed_markdown_english_two.outputs.all_changed_files }}"> ./logs/log2.md
        #echo "${{ steps.get_changed_markdown_english_three.outputs.all_changed_files }}" > ./logs/log3.md
        
       
    - name: Run link checker
      id: link-check
      run: |
        npm -g install markdown_link_checker_sc
        #markdown_link_checker_sc -d ${{ github.workspace }}/en -f ./logs/log.md -r ${{ github.workspace }} > ./logs/filteredLinks.md
        #markdown_link_checker_sc -r ${{ github.workspace }} -d en -f ./logs/prFiles.json -i assets > ./logs/errorsFilteredByPrPages.md
        markdown_link_checker_sc -r ${{ github.workspace }} -d en -f ./logs/log.md -i assets > ./logs/errorsFilteredByPrPages.md
        
        
        #output=$(markdown_link_checker_sc -d ${{ github.workspace }}/en -f ./logs/log.md -r ${{ github.workspace }} )
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-a-multiline-string
        # How to do multi-line input from standard out.
        #EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        #echo "LINKERROR<<$EOF" >> $GITHUB_ENV
        #echo "${output}" >> $GITHUB_ENV
        #echo "$EOF" >> $GITHUB_ENV        
  
    #- name: Echo env
    #  run: echo "${{ env.LINKERROR }}"

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist-without-markdown
        path: |
          logs
          
    - name: Read log.md
      id: package
      uses: juliangruber/read-file-action@v1
      with:
        path: ./logs/filteredLinks.md

    - name: Echo package.json
      run: echo "${{ steps.package.outputs.content }}"
      
